package matrices;

import static org.junit.Assert.*;
import static org.junit.Assume.assumeNoException;

import java.util.logging.Level;
import java.util.logging.Logger;

import org.junit.Test;

public class Test_task {

	@Test
	public void testException() {
		boolean thrown = false;
        Matriz m1 = new Matriz(1, 2, true);
        System.out.println(m1);
        Matriz m2 = new Matriz(3, 4, true);
        System.out.println(m2); 
        try{
        	System.out.println(Matriz.sumarDosMatrices(m1, m2));
        } catch(DimensionesIncompatibles e) {
        	thrown = true;
        }
        assertTrue(thrown);
	}
	@Test
	public void testMultiplicacion() {
		Matriz m1 = new Matriz(3, 3, true);
        System.out.println(m1);
        Matriz m2 = new Matriz(3, 3, true);
        System.out.println(m2);
        try {
        	System.out.println(Matriz.multiplicarDosMatrices(m1, m2));
        } catch (DimensionesIncompatibles ex) {
            Logger.getLogger(Driver.class.getName()).log(Level.SEVERE, null, ex);
        }
	}
	@Test
	public void testTraspuesta() {
		Matriz m1 = new Matriz(3, 3, true);
        System.out.println(m1);
    	System.out.println(Matriz.traspuesta(m1));
	}
	@Test 
	public void testTraspuestadeTraspuesta() {
		Matriz m1 = new Matriz(3, 3, true);
		Matriz traspuesta = Matriz.traspuesta(m1);
		Matriz resultado = Matriz.traspuesta(traspuesta);
		System.out.println(m1);
		System.out.println(resultado);
		assertEquals(m1,resultado);
	}
	@Test 
	public void testMultiplicacionTraspuestas() {
		Matriz m1 = new Matriz(3, 3, true);
		Matriz m2 = new Matriz(3, 3, true);
		Matriz m1_traspuesta = Matriz.traspuesta(m1);
		Matriz m2_traspuesta = Matriz.traspuesta(m2);
		try {
			Matriz multiplicacion = Matriz.multiplicarDosMatrices(m1, m2);
			Matriz trasp_multiplicacion = Matriz.traspuesta(multiplicacion);
			System.out.println(trasp_multiplicacion);
			Matriz resultado = Matriz.multiplicarDosMatrices(m1_traspuesta, m2_traspuesta);
			System.out.println(resultado);
			assertEquals(trasp_multiplicacion,resultado);
        } catch (DimensionesIncompatibles ex) {
            Logger.getLogger(Driver.class.getName()).log(Level.SEVERE, null, ex);
        }	
	}
	
}
